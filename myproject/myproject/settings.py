"""
Django settings for myproject project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
from datetime import timedelta
from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-dyzo)9!u#xh+-gydtctqg=c_=!)$k+@+a8ow+-fbf=j4#02)%='

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework_simplejwt',
    'authapp',
    'djangosaml2',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'myproject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'myproject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': "try",
        'USER': 'admin',
        'PASSWORD': 'Gurpreet@2309',  # Ensure the password is correctly set
        'HOST': 'localhost',
        'PORT': '3306'
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    
    'DEFAULT_AUTHENTICATION_CLASSES': (
        
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
    
}

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME" : timedelta(minutes=5),
    "RERESH_TOKEN_LIFETIME" : timedelta(days=1),
}
SAML_SETTINGS = {
    'SP_ENTITY_ID': 'http://localhost:8000/sso/acs/',  #Service Provider URL
    'ACS_URL': 'http://localhost:8000/sso/acs/',  #Assertion Consumer Service (ACS) URL
    'IDP_ENTITY_ID': 'https://idp.example.com/saml',  #Identity Provider (IDP) URL
    'IDP_SSO_URL': 'https://idp.example.com/sso',  #IdP SSO URL
    'IDP_PUBLIC_CERT': '/path/to/idp-public-cert.pem',  #Path to the IdP public certificate
    'SAML_METADATA_URL': 'https://idp.example.com/metadata',  #IdP metadata URL
}
SAML_CONFIG = {
    'xmlsec_binary': '/usr/bin/xmlsec1',
    'entityid': 'http://127.0.0.1:8000/saml/metadata/',
    'attribute_map_dir': os.path.join(BASE_DIR, 'attribute-maps'),
    'metadata': {
        'local': [os.path.join(BASE_DIR, 'saml/metadata.xml')],
    },
    'service': {
        'sp': {
            'name': 'Django Service Provider',
            'entity_id': 'http://127.0.0.1:8000/saml/metadata/',
            'assertion_consumer_service': {
                'url': 'http://127.0.0.1:8000/saml/acs/',
            },
        },
    },
    'security': {
        'sign_assertion': False,
        'sign_response': False,
        'encrypt_assertion': False,
    },
    'debug': True,
    'logging': {
        'level': 'DEBUG',
    },
}